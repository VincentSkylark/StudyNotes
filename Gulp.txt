package.js:
{
  "name": "blur_admin",
  "version": "1.3.1",
  "devDependencies": {
    "browser-sync": "~2.18.2",
    "browser-sync-spa": "~1.0.3",
    "chalk": "~1.1.1",
    "del": "~2.2.2",
    "eslint-plugin-angular": "~0.12.0",
    "estraverse": "~4.2.0",
    "gulp": "~3.9.0",
    "gulp-angular-filesort": "~1.1.1",
    "gulp-angular-templatecache": "~2.0.0",
    "gulp-autoprefixer": "~3.1.1",
    "gulp-eslint": "~1.0.0",
    "gulp-filter": "~4.0.0",
    "gulp-flatten": "~0.3.1",
    "gulp-gh-pages": "^0.5.4",
    "gulp-inject": "~4.1.0",
    "gulp-load-plugins": "~1.4.0",
    "gulp-minify-css": "~1.2.1",
    "gulp-minify-html": "~1.0.4",
    "gulp-ng-annotate": "~2.0.0",
    "gulp-prompt": "^0.2.0",
    "gulp-protractor": "~3.0.0",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "~0.5.4",
    "gulp-rev": "~7.1.2",
    "gulp-rev-replace": "~0.4.2",
    "gulp-sass": "~2.3.2",
    "gulp-shell": "^0.5.2",
    "gulp-size": "~2.1.0",
    "gulp-sourcemaps": "~1.6.0",
    "gulp-uglify": "~2.0.0",
    "gulp-useref": "~1.3.0",
    "gulp-util": "~3.0.6",
    "gulp-zip": "^3.0.2",
    "http-proxy-middleware": "~0.17.2",
    "lodash": "~4.17.2",
    "main-bower-files": "~2.13.1",
    "uglify-save-license": "~0.4.1",
    "wiredep": "~4.0.0",
    "wrench": "~1.5.8" //File Recursive (递归)
  },
  "scripts": {
    "postinstall": "bower install"
  }
}

1. browser-sync: sync multiple browsers
2. browser-sync-spa: Better Single Page App support for BrowserSync
	-Install:
	$ npm install browser-sync browser-sync-spa
	-Setup:
	var browserSync = require("browser-sync");
	var spa         = require("browser-sync-spa");
	 
	browserSync.use(spa({
		selector: "[ng-app]" // Only needed for angular apps 
	}));
	 
	browserSync({
		open: false,
		server: "setups/angular",
		files:  "setups/angular/*"
	});
3. chalk: string styling module
	-Install:
	$ npm install --save chalk
	-Setup:
	var chalk = require('chalk');
	 
	// style a string 
	chalk.blue('Hello world!');
	// compose multiple styles using the chainable API 
	chalk.blue.bgRed.bold('Hello world!');
	// define your own themes
	var chalk = require('chalk');
	var error = chalk.bold.red;
	console.log(error('Error!'));
	-Style:
		Modifiers:
			reset
			bold
			dim
			italic (not widely supported)
			underline
			inverse
			hidden
			strikethrough (not widely supported)
		Colors:
			black
			red
			green
			yellow
			blue (on Windows the bright version is used as normal blue is illegible)
			magenta
			cyan
			white
			gray
		Background Colors:
			bgBlack
			bgRed
			bgGreen
			bgYellow
			bgBlue
			bgMagenta
			bgCyan
			bgWhite
4. del:Delete files and folders
	-Install:
	$npm install --save del
	-Usage:
	const del = require('del');
	del(['tmp/*.js','!tmp/unicorn.js']).then(paths=>{
		console.log('Delete files and filders:\n', paths.join('\n'));
	})
	-API:
	del(patterns, [options])
	Returns a promise for an array of deleted paths.

	del.sync(patterns, [options])
	Returns an array of deleted paths.
5. eslint-plugin-angular: ESLint rules for your angular project with checks for best-practices, conventions or potential errors.
	-Use with shareable config:
	$npm install --save-dev eslink
	$npm install --save-dev eslint-plugin-angular
	$npm install --save-dev eslint-config-angular
	add to .eslintrc:
	extends: angular
	
	-Use without shareable config:
	$npm install --save-dev eslint
	$npm install --save-dev eslint-plugin-angular
	enable plugin from .eslintrc:
	plugins:
		- angular
	rules:
		- angular/controller_name: 0
	variable of rules:
		-"off" or 0 - turn the rule off
		-"warn" or 1 - turn the rule on as a warning (doesn’t affect exit code)
		-"error" or 2 - turn the rule on as an error (exit code is 1 when triggered)
6.
