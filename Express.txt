Express:
1. Install: 
	$ npm install express --save
	$ npm install express-generator -g
	
2. express generator help:
	$ express -h

  Usage: express [options] [dir]

  Options:
    -h, --help          output usage information
        --version       output the version number
    -e, --ejs           add ejs engine support
        --hbs           add handlebars engine support
        --pug           add pug engine support
    -H, --hogan         add hogan.js engine support
    -v, --view <engine> add view <engine> support (ejs|hbs|hjs|jade|pug|twig|vash) (defaults to jade)
    -c, --css <engine>  add stylesheet <engine> support (less|stylus|compass|sass) (defaults to plain css)
        --git           add .gitignore
    -f, --force         force on non-empty directory
	
3. generate barebone express application:
	$ express --view=jade myapp
	$ cd myapp
	$ npm install
	<linux>$ DEBUG=myapp:* npm start
	<win>$ DEBUG=myapp:* & npm start
	
4. basic routing:
	Routing refers to determining how an application responds to a client request to a particular endpoint, which is a URI (or path) and a specific HTTP request method (GET, POST, and so on).
	app.METHOD(PATH, HANDLER)
	
	app.get('/random.text', function (req, res) {
	  res.send('random.text')
	})
		
	app.post('/', function (req, res) {
	  res.send('Got a POST request')
	})

	app.put('/user', function (req, res) {
	  res.send('Got a PUT request at /user')
	})

	app.delete('/user', function (req, res) {
	  res.send('Got a DELETE request at /user')
	})

5. Serving static files:
	To serve static files such as images, CSS files, and JavaScript files, use the express.static built-in middleware function in Express.
		app.use(express.static('public'))
	However, the path that you provide to the express.static function is relative to the directory from where you launch your node process. If you run the express app from another directory, itâ€™s safer to use the absolute path of the directory that you want to serve:
		app.use('/static', express.static(path.join(__dirname, 'public')))
		
6. 